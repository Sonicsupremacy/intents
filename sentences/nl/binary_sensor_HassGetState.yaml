language: nl
intents:
  HassGetState:
    data:
      # https://www.home-assistant.io/integrations/binary_sensor/
      - sentences:
          - "<is> [de] [batterij[status]] [van] [<in> <area>][ ]<name>[ ][batterij] [<in> <area>] {bs_battery_states:state} [<in> <area>]"
        response: bs_yesno
        requires_context:
          domain: binary_sensor
          device_class: battery
        slots:
          domain: binary_sensor
          device_class: battery

      - sentences:
          - "<is> [[de] batterij [van]] [<in> <area>][ ]<name>[ ][batterij] [<in> <area>] {bs_battery_charging_states:state} [<in> <area>]"
        response: bs_yesno
        requires_context:
          domain: binary_sensor
          device_class: battery_charging
        slots:
          domain: binary_sensor
          device_class: battery_charging

      - sentences:
          - "<detecteer> [<met>] <sensor_name_area> {bs_carbon_monoxide_states:state} [<in> <area>]"
          - "neemt <sensor_name_area> {bs_carbon_monoxide_states:state} (waar [<in> <area>]|[<in> <area>] waar)"
          - "<is> [er] [<in> <area>] {bs_carbon_monoxide_states:state} <detecteer> <sensor_name_area>"
          - "<is> [er] [<in> <area>] {bs_carbon_monoxide_states:state} <met> [<area>][ ]<name> <detecteer> [<in> <area>]"
          - "<is> [er] <sensor_name_area> {bs_carbon_monoxide_states:state} <detecteer> [<in> <area>]"
        response: bs_yesno
        requires_context:
          domain: binary_sensor
          device_class: carbon_monoxide
        slots:
          domain: binary_sensor
          device_class: carbon_monoxide

      - sentences:
          - "(is|<detecteer>) [er] [<in>|<met>] [<area>][ ]<name> [<in> <area>] {bs_cold_states:state} [<in> <area>]"
          - "neemt <sensor_name_area> {bs_cold_states:state} (waar [<in> <area>]|[<in> <area>] waar)"
          - "<is> [er] [<in> <area>] {bs_cold_states:state} <detecteer> <sensor_name_area>"
          - "<is> [er] [<in> <area>] {bs_cold_states:state} <met> [<area>][ ]<name> <detecteer> [<in> <area>]"
          - "<is> [er] <sensor_name_area>  {bs_cold_states:state} <detecteer> [<in> <area>]"
        response: bs_yesno
        requires_context:
          domain: binary_sensor
          device_class: cold
        slots:
          domain: binary_sensor
          device_class: cold

      - sentences:
          - "<is> <sensor_name_area> {bs_connectivity_states:state} [<in> <area>]"
        response: bs_yesno
        requires_context:
          domain: binary_sensor
          device_class: connectivity
        slots:
          domain: binary_sensor
          device_class: connectivity

      - sentences:
          - "<is> <sensor_name_area> {bs_door_states:state} [<in> <area>]"
        response: bs_yesno
        requires_context:
          domain: binary_sensor
          device_class: door
        slots:
          domain: binary_sensor
          device_class: door

      - sentences:
          - "<is> <sensor_name_area> {bs_garage_door_states:state} [<in> <area>]"
        response: bs_yesno
        requires_context:
          domain: binary_sensor
          device_class: garage_door
        slots:
          domain: binary_sensor
          device_class: garage_door

      - sentences:
          - "<detecteer> [<in>|<met>] [<area>][ ]<name> [<in> <area>] {bs_gas_states:state} [<in> <area>]"
          - "neemt <sensor_name_area> {bs_gas_states:state} (waar [<in> <area>]|[<in> <area>] waar)"
          - "<is> [er] [<in> <area>] {bs_gas_states:state} <detecteer> <sensor_name_area>"
          - "<is> [er] [<in> <area>] {bs_gas_states:state} <met> [<area>][ ]<name> <detecteer> [<in> <area>]"
          - "<is> [er] <sensor_name_area> {bs_gas_states:state} <detecteer> [<in> <area>]"
        response: bs_yesno
        requires_context:
          domain: binary_sensor
          device_class: gas
        slots:
          domain: binary_sensor
          device_class: gas

      - sentences:
          - "(<is>|<detecteer>) [er] [<in>|<met>] [<area>][ ]<name> [<in> <area>] {bs_heat_states:state} [<in> <area>]"
          - "neemt <sensor_name_area> {bs_heat_states:state} (waar [<in> <area>]|[<in> <area>] waar)"
          - "<is> [er] [<in> <area>] {bs_heat_states:state} <detecteer> <sensor_name_area>"
          - "<is> [er] [<in> <area>] {bs_heat_states:state} <met> [<area>][ ]<name> <detecteer> [<in> <area>]"
          - "<is> [er] <sensor_name_area> {bs_heat_states:state} <detecteer> [<in> <area>]"
        response: bs_yesno
        requires_context:
          domain: binary_sensor
          device_class: heat
        slots:
          domain: binary_sensor
          device_class: heat

      - sentences:
          - "(<is>|<detecteer>) [er] [<in>|<met>] [<area>][ ]<name> [<in> <area>] {bs_light_states:state} [<in> <area>]"
          - "neemt <sensor_name_area> {bs_light_states:state} (waar [<in> <area>]|[<in> <area>] waar)"
          - "<is> [er] [<in> <area>] {bs_light_states:state} <detecteer> <sensor_name_area>"
          - "<is> [er] [<in> <area>] {bs_light_states:state} <met> [<area>][ ]<name> <detecteer> [<in> <area>]"
          - "<is> [er] <sensor_name_area> {bs_light_states:state} <detecteer> [<in> <area>]"
        response: bs_yesno
        requires_context:
          domain: binary_sensor
          device_class: light
        slots:
          domain: binary_sensor
          device_class: light

      - sentences:
          - "<is> <sensor_name_area> {bs_lock_states:state} [<in> <area>]"
        response: bs_yesno
        requires_context:
          domain: binary_sensor
          device_class: lock
        slots:
          domain: binary_sensor
          device_class: lock

      - sentences:
          - "(<is>|<detecteer>) [<in>|<met>] [<area>][ ]<name> [<in> <area>] {bs_moisture_states:state} [<in> <area>]"
          - "neemt <sensor_name_area> {bs_moisture_states:state} (waar [<in> <area>]|[<in> <area>] waar)"
          - "<is> [er] [<in> <area>] {bs_moisture_states:state} <detecteer> <sensor_name_area>"
          - "<is> [er] [<in> <area>] {bs_moisture_states:state} <met> [<area>][ ]<name> <detecteer> [<in> <area>]"
          - "<is> [er] <sensor_name_area> {bs_moisture_states:state} <detecteer> [<in> <area>]"
        response: bs_yesno
        requires_context:
          domain: binary_sensor
          device_class: moisture
        slots:
          domain: binary_sensor
          device_class: moisture

      - sentences:
          - "<detecteer> [er] [<in>|<met>] [<area>][ ]<name> [<in> <area>] {bs_motion_states:state} [<in> <area>]"
          - "neemt <sensor_name_area> {bs_motion_states:state} (waar [<in> <area>]|[<in> <area>] waar)"
          - "<is> [er] [<in> <area>] {bs_motion_states:state} <detecteer> <sensor_name_area>"
          - "<is> [er] [<in> <area>] {bs_motion_states:state} <met> [<area>][ ]<name> <detecteer> [<in> <area>]"
          - "<is> [er] <sensor_name_area> {bs_motion_states:state} <detecteer> [<in> <area>]"
        response: bs_yesno
        requires_context:
          domain: binary_sensor
          device_class: motion
        slots:
          domain: binary_sensor
          device_class: motion

      - sentences:
          - "<detecteer> [er] [<in>|<met>] [<area>][ ]<name> [<in> <area>] {bs_occupancy_states:state} [<in> <area>]"
          - "neemt <sensor_name_area> {bs_occupancy_states:state} (waar [<in> <area>]|[<in> <area>] waar)"
          - "(is|zijn|word[t|en]) [er] [<in> <area>] {bs_occupancy_states:state} <detecteer> <sensor_name_area>"
          - "(is|zijn|wordt[t|en]) [er] [<in> <area>] {bs_occupancy_states:state} <met> [<area>][ ]<name> <detecteer> [<in> <area>]"
          - "<is> [er] <sensor_name_area> {bs_occupancy_states:state} <detecteer> [<in> <area>]"
        response: bs_yesno
        requires_context:
          domain: binary_sensor
          device_class: occupancy
        slots:
          domain: binary_sensor
          device_class: occupancy

      - sentences:
          - "<is> <sensor_name_area> {bs_opening_states:state} [<in> <area>]"
        response: bs_yesno
        requires_context:
          domain: binary_sensor
          device_class: opening
        slots:
          domain: binary_sensor
          device_class: opening

      - sentences:
          - "<is> [[de] (kabel[s]|lader[s]) van] [<area>][ ]<name> [<in> <area>] {bs_plug_states:state} [<in> <area>]"
          - "<is> [<in> <area>] [[de] (kabel[s]|lader[s]) van] <name>[[ ](lader[s]|kabel[s])]  [<in> <area>] {bs_plug_states:state} [<in> <area>]"
        response: bs_yesno
        requires_context:
          domain: binary_sensor
          device_class: plug
        slots:
          domain: binary_sensor
          device_class: plug

      # power
      - sentences:
          - "(<is>|<detecteer>) [er] [<in>|<met>] [<area>][ ]<name> [<in> <area>] {bs_power_states:state} [<in> <area>]"
          - "neemt <sensor_name_area> {bs_power_states:state} (waar [<in> <area>]|[<in> <area>] waar)"
          - "<is> [er] [<in> <area>] {bs_power_states:state} <detecteer> <sensor_name_area>"
          - "<is> [er] [<in> <area>] {bs_power_states:state} <met> [<area>][ ]<name> <detecteer> [<in> <area>]"
          - "<is> [er] <sensor_name_area> {bs_power_states:state} <detecteer> [<in> <area>]"
        response: bs_yesno
        requires_context:
          domain: binary_sensor
          device_class: power
        slots:
          domain: binary_sensor
          device_class: power

      # presense
      - sentences:
          - "<is> <sensor_name_area> {bs_presence_states:state} [<in> <area>]"
        response: bs_yesno
        requires_context:
          domain: binary_sensor
          device_class: presence
        slots:
          domain: binary_sensor
          device_class: presence

      # problem
      - sentences:
          - "<is> er [<in> <area>] {bs_problem_states:state} <sensor_name_area>"
          - "(heeft|<detecteer>) <sensor_name_area> {bs_problem_states:state} [<in> <area>]"
          - "neemt <sensor_name_area> {bs_problem_states:state} (waar [<in> <area>]|[<in> <area>] waar)"
          - "<is> [er] [<in> <area>] {bs_problem_states:state} <detecteer> <sensor_name_area>"
          - "<is> [er] [<in> <area>] {bs_problem_states:state} <met> [<area>][ ]<name> <detecteer> [<in> <area>]"
          - "<is> [er] <sensor_name_area> {bs_problem_states:state} <detecteer> [<in> <area>]"
        response: bs_yesno
        requires_context:
          domain: binary_sensor
          device_class: problem
        slots:
          domain: binary_sensor
          device_class: problem

      - sentences:
          - (<detecteer>|<is>) [er] [ergens] [[<met>] <sensor_area>] {bs_problem_states:state} [<in> <area>]
          - "<is> [er] [<in> <area>] [ergens] [<in> <area>] {bs_problem_states:state} [<in> <area>] <detecteer> [<in> <area>]"
        response: any
        slots:
          domain: binary_sensor
          device_class: problem

      - sentences:
          - "(is|zijn) er [<in> <area>] <alle> [<in> <area>] {bs_problem_states:state} [<in> <area>]"
          - <detecteer> <alle> <sensor_area> {bs_problem_states:state} [<in> <area>]
          - <is> [<met>] <alle> [<in> <area>][ ]<sensor> {bs_problem_states:state} [<in> <area>] <detecteer> [<in> <area>]
        response: all
        slots:
          domain: binary_sensor
          device_class: problem

      - sentences:
          - Welk[e] <sensor_area> (nemen|neemt) {bs_problem_states:state} waar [<in> <area>]
          - Welk[e] <sensor_area> <detecteer> {bs_problem_states:state} [<in> <area>]
        response: which
        slots:
          domain: binary_sensor
          device_class: problem

      - sentences:
          - hoe[ ]veel <sensor_area> <detecteer> [er] [<in> <area>] {bs_problem_states:state} [<in> <area>]
          - hoe[ ]veel <sensor_area> nemen [er] [<in> <area>] {bs_problem_states:state} [<in> <area>] waar [<in> <area>]
          - <met> hoe[ ]veel <sensor_area> word(t|en) [er] [<in> <area>] {bs_problem_states:state} [<in> <area>] <detecteer> [<in> <area>]
        response: how_many
        slots:
          domain: binary_sensor
          device_class: problem

      # running
      - sentences:
          - "{bs_running_states:state} <sensor_name_area>"
          - "(<is>|<detecteer>) [er] [<in>|<met>] [<area>][ ]<name> [<in> <area>] {bs_running_states:state} [<in> <area>]"
          - "neemt <sensor_name_area> {bs_running_states:state} (waar [<in> <area>]|[<in> <area>] waar)"
          - "<is> [er] [<in> <area>] {bs_running_states:state} <detecteer> <sensor_name_area>"
          - "<is> [er] [<in> <area>] {bs_running_states:state} <met> [<area>][ ]<name> <detecteer> [<in> <area>]"
          - "<is> [er] <sensor_name_area> {bs_running_states:state} <detecteer> [<in> <area>]"
        response: bs_yesno
        requires_context:
          domain: binary_sensor
          device_class: running
        slots:
          domain: binary_sensor
          device_class: running

      - sentences:
          - "{bs_running_states:state} [er] [ergens] <sensor_area>"
          - (<detecteer>|<is>) [er] [ergens] [[<met>] <sensor_area>] {bs_running_states:state} [<in> <area>]
          - "<is> [er] [<in> <area>] [ergens] [<in> <area>] {bs_running_states:state} [<in> <area>] <detecteer> [<in> <area>]"
        response: any
        slots:
          domain: binary_sensor
          device_class: running

      - sentences:
          - "{bs_running_states:state} <alle> <sensor_area>"
          - "is er [<in> <area>] <alle> [<in> <area>] {bs_running_states:state} [<in> <area>]"
          - (<detecteer>|<is>) <alle> <sensor_area> {bs_running_states:state} [<in> <area>]
          - <is> [<met>] <alle> [<in> <area>][ ]<sensor> {bs_running_states:state} [<in> <area>] <detecteer> [<in> <area>]
        response: all
        slots:
          domain: binary_sensor
          device_class: running

      - sentences:
          - Welk[e] <sensor_area> (nemen|neemt) {bs_running_states:state} waar [<in> <area>]
          - Welk[e] <sensor_area> [<detecteer>|<is>] {bs_running_states:state} [<in> <area>]
        response: which
        slots:
          domain: binary_sensor
          device_class: running

      - sentences:
          - hoe[ ]veel <sensor_area> [<detecteer>|<is>] [er] [<in> <area>] {bs_running_states:state} [<in> <area>]
          - hoe[ ]veel <sensor_area> nemen [er] [<in> <area>] {bs_running_states:state} [<in> <area>] waar [<in> <area>]
          - <met> hoe[ ]veel <sensor_area> word(t|en) [er] [<in> <area>] {bs_running_states:state} [<in> <area>] <detecteer> [<in> <area>]
        response: how_many
        slots:
          domain: binary_sensor
          device_class: running

      # safety
      - sentences:
          - "(<is>|<detecteer>) [er] [<in>|<met>] [<area>][ ]<name> [<in> <area>] {bs_safety_states:state} [<in> <area>]"
          - "neemt <sensor_name_area> {bs_safety_states:state} (waar [<in> <area>]|[<in> <area>] waar)"
          - "<is> [er] [<in> <area>] {bs_safety_states:state} <detecteer> <sensor_name_area>"
          - "<is> [er] [<in> <area>] {bs_safety_states:state} <met> [<area>][ ]<name> <detecteer> [<in> <area>]"
          - "<is> [er] <sensor_name_area> {bs_safety_states:state} <detecteer> [<in> <area>]"
        response: bs_yesno
        requires_context:
          domain: binary_sensor
          device_class: safety
        slots:
          domain: binary_sensor
          device_class: safety

      - sentences:
          - (<detecteer>|<is>) [er] [ergens] [[<met>] <sensor_area>] {bs_safety_states:state} [<in> <area>]
          - "<is> [er] [<in> <area>] [ergens] [<in> <area>] {bs_safety_states:state} [<in> <area>] <detecteer> [<in> <area>]"
        response: any
        slots:
          domain: binary_sensor
          device_class: safety

      - sentences:
          - "is het [<in> <area>] <alle> [<in> <area>] {bs_safety_states:state} [<in> <area>]"
          - (<detecteer>|<is>) <alle> <sensor_area> {bs_safety_states:state} [<in> <area>]
          - <is> [<met>] <alle> [<in> <area>][ ]<sensor> {bs_safety_states:state} [<in> <area>] <detecteer> [<in> <area>]
        response: all
        slots:
          domain: binary_sensor
          device_class: safety

      - sentences:
          - Welk[e] <sensor_area> (nemen|neemt) {bs_safety_states:state} waar [<in> <area>]
          - Welk[e] <sensor_area> <detecteer> {bs_safety_states:state} [<in> <area>]
        response: which
        slots:
          domain: binary_sensor
          device_class: safety

      - sentences:
          - hoe[ ]veel <sensor_area> <detecteer> [er] [<in> <area>] {bs_safety_states:state} [<in> <area>]
          - hoe[ ]veel <sensor_area> nemen [er] [<in> <area>] {bs_safety_states:state} [<in> <area>] waar [<in> <area>]
          - <met> hoe[ ]veel <sensor_area> word(t|en) [er] [<in> <area>] {bs_safety_states:state} [<in> <area>] <detecteer> [<in> <area>]
        response: how_many
        slots:
          domain: binary_sensor
          device_class: safety

      # smoke
      - sentences:
          - "(<is>|<detecteer>) [er] [<in>|<met>] [<area>][ ]<name> [<in> <area>] {bs_smoke_states:state} [<in> <area>]"
          - "neemt <sensor_name_area> {bs_smoke_states:state} (waar [<in> <area>]|[<in> <area>] waar)"
          - "<is> [er] [<in> <area>] {bs_smoke_states:state} <detecteer> <sensor_name_area>"
          - "<is> [er] [<in> <area>] {bs_smoke_states:state} <met> [<area>][ ]<name> <detecteer> [<in> <area>]"
          - "<is> [er] <sensor_name_area> {bs_smoke_states:state} <detecteer> [<in> <area>]"
        response: bs_yesno
        requires_context:
          domain: binary_sensor
          device_class: smoke
        slots:
          domain: binary_sensor
          device_class: smoke

      - sentences:
          - (<detecteer>|<is>) [er] [ergens] [[<met>] <sensor_area>] {bs_smoke_states:state} [<in> <area>]
          - "<is> [er] [<in> <area>] [ergens] [<in> <area>] {bs_smoke_states:state} [<in> <area>] <detecteer> [<in> <area>]"
        response: any
        slots:
          domain: binary_sensor
          device_class: smoke

      - sentences:
          - <detecteer> <alle> <sensor_area> {bs_smoke_states:state} [<in> <area>]
          - <is> [<met>] <alle> [<in> <area>][ ]<sensor> {bs_smoke_states:state} [<in> <area>] <detecteer> [<in> <area>]
        response: all
        slots:
          domain: binary_sensor
          device_class: smoke

      - sentences:
          - Welk[e] <sensor_area> (nemen|neemt) {bs_smoke_states:state} waar [<in> <area>]
          - Welk[e] <sensor_area> <detecteer> {bs_smoke_states:state} [<in> <area>]
        response: which
        slots:
          domain: binary_sensor
          device_class: smoke

      - sentences:
          - hoe[ ]veel <sensor_area> <detecteer> [er] [<in> <area>] {bs_smoke_states:state} [<in> <area>]
          - hoe[ ]veel <sensor_area> nemen [er] [<in> <area>] {bs_smoke_states:state} [<in> <area>] waar [<in> <area>]
          - <met> hoe[ ]veel <sensor_area> word(t|en) [er] [<in> <area>] {bs_smoke_states:state} [<in> <area>] <detecteer> [<in> <area>]
        response: how_many
        slots:
          domain: binary_sensor
          device_class: smoke

      # sound
      - sentences:
          - "maakt <sensor_name_area> {bs_sound_states:state}"
          - "(<is>|<detecteer>) [er] [<in>|<met>] [<area>][ ]<name> [<in> <area>] {bs_sound_states:state} [<in> <area>]"
          - "neemt <sensor_name_area> {bs_sound_states:state} (waar [<in> <area>]|[<in> <area>] waar)"
          - "<is> [er] [<in> <area>] {bs_sound_states:state} <detecteer> <sensor_name_area>"
          - "<is> [er] [<in> <area>] {bs_sound_states:state} <met> [<area>][ ]<name> <detecteer> [<in> <area>]"
          - "<is> [er] <sensor_name_area> {bs_sound_states:state} <detecteer> [<in> <area>]"
        response: bs_yesno
        requires_context:
          domain: binary_sensor
          device_class: sound
        slots:
          domain: binary_sensor
          device_class: sound

      - sentences:
          - "maakt [er] [ergens] <sensor_area> {bs_sound_states:state}"
          - "<is> [er] [ergens] [[<met>] <sensor_area>] {bs_sound_states:state} [[aan het maken] [<in> <area>]|[<in> <area>] [aan het maken]]"
          - <detecteer> [er] [ergens]  <sensor_area> {bs_sound_states:state} [<in> <area>]
          - "<is> [er] [<in> <area>] [ergens] [<in> <area>] {bs_sound_states:state} [<in> <area>] <detecteer> [<in> <area>]"
        response: any
        slots:
          domain: binary_sensor
          device_class: sound

      - sentences:
          - "(maakt|maken) <alle> <sensor_area> {bs_sound_states:state}"
          - <is> <alle> <sensor_area> {bs_sound_states:state} [[aan het maken] [<in> <area>]|[<in> <area>] [aan het maken]]
          - <detecteer> <alle>  <sensor_area> {bs_sound_states:state} [<in> <area>]
          - <is> [<met>] <alle> [<in> <area>][ ]<sensor> {bs_sound_states:state} [<in> <area>] <detecteer> [<in> <area>]
        response: all
        slots:
          domain: binary_sensor
          device_class: sound

      - sentences:
          - Welk[e] <sensor_area> [is|zijn] {bs_sound_states:state} [[aan het maken] [<in> <area>]|[<in> <area>] [aan het maken]]
          - Welk[e] <sensor_area> (nemen|neemt) {bs_sound_states:state} waar [<in> <area>]
          - Welk[e] <sensor_area> <detecteer> {bs_sound_states:state} [<in> <area>]
        response: which
        slots:
          domain: binary_sensor
          device_class: sound

      - sentences:
          - hoe[ ]veel <sensor_area> [is|zijn] [er] [<in> <area>] {bs_sound_states:state} [[aan het maken] [<in> <area>]|[<in> <area>] [aan het maken]]
          - hoe[ ]veel <sensor_area> <detecteer> [er] [<in> <area>] {bs_sound_states:state} [<in> <area>]
          - hoe[ ]veel <sensor_area> nemen [er] [<in> <area>] {bs_sound_states:state} [<in> <area>] waar [<in> <area>]
          - <met> hoe[ ]veel <sensor_area> word(t|en) [er] [<in> <area>] {bs_sound_states:state} [<in> <area>] <detecteer> [<in> <area>]
        response: how_many
        slots:
          domain: binary_sensor
          device_class: sound

      # tamper
      - sentences:
          - "(<is>|<detecteer>) [er] [in|op|van|bij] [<area>][ |door |met |bij ]<name> [<in> <area>] {bs_tamper_states:state} [<in> <area>]"
          - "neemt <sensor_name_area> {bs_tamper_states:state} (waar [<in> <area>]|[<in> <area>] waar)"
          - "<is> [er] [<in> <area>] {bs_tamper_states:state} <detecteer> <sensor_name_area>"
          - "<is> [er] [<in> <area>] {bs_tamper_states:state} <met> [<area>][ ]<name> <detecteer> [<in> <area>]"
          - "<is> [er] <sensor_name_area> {bs_tamper_states:state} <detecteer> [<in> <area>]"
        response: bs_yesno
        requires_context:
          domain: binary_sensor
          device_class: tamper
        slots:
          domain: binary_sensor
          device_class: tamper

      - sentences:
          - "<is> [er] [ergens] [[<met>] <sensor_area>] {bs_tamper_states:state} [<in> <area>]"
          - <detecteer> [er] [ergens] [<met>] <sensor_area> {bs_tamper_states:state} [<in> <area>]
          - "<is> [er] [<in> <area>] [ergens] [[<met>] <sensor_area>]  {bs_tamper_states:state} [<in> <area>] <detecteer> [<in> <area>]"
        response: any
        slots:
          domain: binary_sensor
          device_class: tamper

      - sentences:
          - <is> ([<met>] <alle>|<alle> [<met>]) <sensor_area> {bs_tamper_states:state} [<in> <area>]
          - <detecteer> <alle>  <sensor_area> {bs_tamper_states:state} [<in> <area>]
          - <is> [<met>] <alle> [<in> <area>][ ]<sensor> {bs_tamper_states:state} [<in> <area>] <detecteer> [<in> <area>]
        response: all
        slots:
          domain: binary_sensor
          device_class: tamper

      - sentences:
          - Welk[e] <sensor_area> [is|zijn|wordt|worden] {bs_tamper_states:state}
          - Welk[e] <sensor_area> (nemen|neemt) {bs_tamper_states:state} waar [<in> <area>]
          - Welk[e] <sensor_area> <detecteer> {bs_tamper_states:state} [<in> <area>]
        response: which
        slots:
          domain: binary_sensor
          device_class: tamper

      - sentences:
          - "[<met>] hoe[ ]veel <sensor_area> [is|zijn|word(t|en)] [er] [<in> <area>] {bs_tamper_states:state} [<in> <area>]"
          - hoe[ ]veel <sensor_area> <detecteer> [er] [<in> <area>] {bs_tamper_states:state} [<in> <area>]
          - hoe[ ]veel <sensor_area> nemen [er] [<in> <area>] {bs_tamper_states:state} [<in> <area>] waar [<in> <area>]
          - <met> hoe[ ]veel <sensor_area> word(t|en) [er] [<in> <area>] {bs_tamper_states:state} [<in> <area>] <detecteer> [<in> <area>]
        response: how_many
        slots:
          domain: binary_sensor
          device_class: tamper

      # update
      - sentences:
          - "<is> [<in> <area>][ ]<name> [[in|op|van] [<area>]] {bs_update_states:state} [<in> <area>]"
          - "<is> [er] [<in> <area>] [een] {bs_update_states:state} [klaar|beschikbaar] voor <sensor_name_area>"
          - "<is> [er] voor <sensor_name_area> [een] {bs_update_states:state} [klaar|beschikbaar] [<in> <area>]"
        response: bs_yesno
        requires_context:
          domain: binary_sensor
          device_class: update
        slots:
          domain: binary_sensor
          device_class: update

      - sentences:
          - "<is> [er] [ergens] <sensor_area> {bs_update_states:state} [<in> <area>]"
          - "<is> [er] [ergens]  {bs_update_states:state} [<in> <area>]"
          - "<is> [er] [<in> <area>] [ergens] [<in> <area>] {bs_update_states:state} [voor] (klaar|beschikbaar) [<in> <area>]"
        response: any
        slots:
          domain: binary_sensor
          device_class: update

      - sentences:
          - <is> <alle> <sensor_area> {bs_update_states:state} [<in> <area>]
          - <is> [er] voor <alle> <sensor_area> {bs_update_states:state} (klaar|beschikbaar) [<in> <area>]
        response: all
        slots:
          domain: binary_sensor
          device_class: update

      - sentences:
          - Welk[e] <sensor_area> [is|zijn] {bs_update_states:state}
          - Voor welk[e] <sensor_area> <is> {bs_update_states:state} (klaar|beschikbaar) [<in> <area>]
        response: which
        slots:
          domain: binary_sensor
          device_class: update

      - sentences:
          - hoe[ ]veel <sensor_area> [is|zijn] [er] [<in> <area>] {bs_update_states:state} [<in> <area>]
          - voor hoe[ ]veel <sensor_area> (staat|staan) [er] [<in> <area>] {bs_update_states:state} [<in> <area>] (klaar|beschikbaar) [<in> <area>]
        response: how_many
        slots:
          domain: binary_sensor
          device_class: update

      # vibration
      - sentences:
          - "{bs_vibration_states:state} <sensor_name_area>"
          - "(is|<detecteer>) [er] <sensor_name_area> {bs_vibration_states:state} [<in> <area>]"
          - "neemt [<area>][ ]<name> [<in> <area>] {bs_vibration_states:state} (waar [<in> <area>]|[<in> <area>] waar)"
          - "<is> [er] [<in> <area>] {bs_vibration_states:state} <detecteer> <sensor_name_area>"
          - "<is> [er] [<in> <area>] {bs_vibration_states:state} <met> [<area>][ ]<name> <detecteer> [<in> <area>]"
          - "<is> [er] <sensor_name_area> {bs_vibration_states:state} <detecteer> [<in> <area>]"
        response: bs_yesno
        requires_context:
          domain: binary_sensor
          device_class: vibration
        slots:
          domain: binary_sensor
          device_class: vibration

      - sentences:
          - "{bs_vibration_states:state} [er] [ergens] <sensor_area>"
          - "<is> [er] [ergens] <sensor_area> {bs_vibration_states:state} [<in> <area>]"
          - <detecteer> [er] [ergens]  <sensor_area> {bs_vibration_states:state} [<in> <area>]
          - "<is> [er] [<in> <area>] [ergens] [<in> <area>] {bs_vibration_states:state} [<in> <area>] <detecteer> [<in> <area>]"
        response: any
        slots:
          domain: binary_sensor
          device_class: vibration

      - sentences:
          - "{bs_vibration_states:state} <alle> <sensor_area>"
          - <is> <alle> <sensor_area> {bs_vibration_states:state} [<in> <area>]
          - <detecteer> <alle>  <sensor_area> {bs_vibration_states:state} [<in> <area>]
          - <is> [<met>] <alle> [<in> <area>][ ]<sensor> {bs_vibration_states:state} [<in> <area>] <detecteer> [<in> <area>]
        response: all
        slots:
          domain: binary_sensor
          device_class: vibration

      - sentences:
          - Welk[e] <sensor_area> [is|zijn] {bs_vibration_states:state}
          - Welk[e] <sensor_area> (nemen|neemt) {bs_vibration_states:state} waar [<in> <area>]
          - Welk[e] <sensor_area> <detecteer> {bs_vibration_states:state} [<in> <area>]
        response: which
        slots:
          domain: binary_sensor
          device_class: vibration

      - sentences:
          - hoe[ ]veel <sensor_area> [is|zijn] [er] [<in> <area>] {bs_vibration_states:state} [<in> <area>]
          - hoe[ ]veel <sensor_area> <detecteer> [er] [<in> <area>] {bs_vibration_states:state} [<in> <area>]
          - hoe[ ]veel <sensor_area> nemen [er] [<in> <area>] {bs_vibration_states:state} [<in> <area>] waar [<in> <area>]
          - <met> hoe[ ]veel <sensor_area> word(t|en) [er] [<in> <area>] {bs_vibration_states:state} [<in> <area>] <detecteer> [<in> <area>]
        response: how_many
        slots:
          domain: binary_sensor
          device_class: vibration

      # window | no any/all/which/how_many sentences because of conflicts with domain: cover / device_class: window
      - sentences:
          - "<is> <sensor_name_area> {bs_window_states:state} [<in> <area>]"
        response: bs_yesno
        requires_context:
          domain: binary_sensor
          device_class: window
        slots:
          domain: binary_sensor
          device_class: window
