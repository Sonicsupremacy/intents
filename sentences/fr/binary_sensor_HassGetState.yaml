language: fr
intents:
  HassGetState:
    data:
      # https://www.home-assistant.io/integrations/binary_sensor/
      # Battery
      - sentences:
          - "[la|les] [batterie] [<de>] <name> [<dans> <area>] <estil> {bs_battery_states:state}"
          - "[la|les] [batterie] [<de>] <name> <estil> {bs_battery_states:state} [<dans> <area>]"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: battery
        slots:
          domain: binary_sensor
          device_class: battery

      - sentences:
          - "Toute[s] [les] ((<capteur>|<appareil>)|batterie[s]) <estil> {bs_battery_states:state} [<dans> <area>]"
        response: all
        slots:
          domain: binary_sensor
          device_class: battery

      - sentences:
          - "<quel> sont les ((<capteur>|<appareil>)||batterie[s]) [qui sont] {bs_battery_states:state} [<dans> <area>]"
          - "<quel> ((<capteur>|<appareil>)||batterie[s]) <estil> {bs_battery_states:state} [<dans> <area>]"
          - "liste les ((<capteur>|<appareil>)||batterie[s]) [qui sont] {bs_battery_states:state} [<dans> <area>]"
        response: which
        slots:
          domain: binary_sensor
          device_class: battery

      - sentences:
          - "Combien de ((<capteur>|<appareil>)||batterie[s]) [<estil>] {bs_battery_states:state} [<dans> <area>]"
          - "Compte (les|le nombre de) ((<capteur>|<appareil>)|batterie[s]) [qui sont] {bs_battery_states:state} [<dans> <area>]"
        response: how_many
        slots:
          domain: binary_sensor
          device_class: battery

      # Battery charging
      - sentences:
          - "[(la|le)] [((<capteur>|<appareil>)|batterie)] [<de>] <name> [<dans> <area>] <estil> {bs_battery_charging_states:state}"
          - "[(la|le)] [((<capteur>|<appareil>)|batterie)] [<de>] <name> <estil> {bs_battery_charging_states:state} [<dans> <area>]"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: battery_charging
        slots:
          domain: binary_sensor
          device_class: battery_charging

      - sentences:
          - "[<yatil>] des ((<capteur>|<appareil>)||batterie[s]) [(qui|en)] {bs_battery_charging_states:state} [<dans> <area>]"
          - "[<yatil>] plusieurs ((<capteur>|<appareil>)||batterie[s]) [(qui|en|<estil>)] {bs_battery_charging_states:state} [<dans> <area>]"
          - "Plusieurs ((<capteur>|<appareil>)||batterie[s]) [<estil>] {bs_battery_charging_states:state} [<dans> <area>]"
        response: any
        slots:
          domain: binary_sensor
          device_class: battery_charging

      - sentences:
          - "<tous> [les] ((<capteur>|<appareil>)||batterie[s]) <estil> {bs_battery_charging_states:state} [<dans> <area>]"
        response: all
        slots:
          domain: binary_sensor
          device_class: battery_charging

      - sentences:
          - "<quel> [sont] [les] ((<capteur>|<appareil>)||batterie[s]) [qui] [sont] {bs_battery_charging_states:state} [<dans> <area>]"
          - "liste les ((<capteur>|<appareil>)||batterie[s]) [qui sont] [en] {bs_battery_charging_states:state} [<dans> <area>]"
        response: which
        slots:
          domain: binary_sensor
          device_class: battery_charging

      - sentences:
          - "combien (de |d')((<capteur>|<appareil>)||batterie[s]) [sont] {bs_battery_charging_states:state} [<dans> <area>]"
          - "compte (les |le nombre d('|e ))((<capteur>|<appareil>)||batterie[s]) [qui] [sont] {bs_battery_charging_states:state} [<dans> <area>]"
        response: how_many
        slots:
          domain: binary_sensor
          device_class: battery_charging

      # Carbon monoxide
      - sentences:
          - "[<yatil>] [<de>] <name> <estil> [au statut] {bs_carbon_monoxide_states:state} [<dans> <area>]"
          - "[du] <name> <atil> été [au statut] {bs_carbon_monoxide_states:state} [<dans> <area>]"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: carbon_monoxide
        slots:
          domain: binary_sensor
          device_class: carbon_monoxide

      - sentences:
          - "[du] (CO2|monoxyde [de carbone]) <estil> {bs_carbon_monoxide_states:state} [<dans> <area>]"
          - "[du] (CO2|monoxyde [de carbone]) <atil> été {bs_carbon_monoxide_states:state} [<dans> <area>]"
        response: any
        slots:
          domain: binary_sensor
          device_class: carbon_monoxide

      - sentences:
          - "[<yatil>] [(un|le) capteur de] (monoxyde de carbone|CO2) [de] [{bs_carbon_monoxide_states:state}] [<dans> <area>]"
          - "[<yatil>] [une alerte] [(de|au)] (monoxyde de carbone|CO2) [de] [{bs_carbon_monoxide_states:state}] [<dans> <area>]"
          - "[Une] alerte [(de|au)] (monoxyde de carbone|CO2) [<atil> été {bs_carbon_monoxide_states:state}] [<dans> <area>]"
        response: any
        slots:
          domain: binary_sensor
          device_class: carbon_monoxide
          state: "on"

      - sentences:
          - "<tous> [les] capteurs [de] (CO2|monoxyde[ de carbone]) <estil> {bs_carbon_monoxide_states:state} [<dans> <area>]"
        response: all
        slots:
          domain: binary_sensor
          device_class: carbon_monoxide

      - sentences:
          - "<quel> capteur[s] [de] (CO2|monoxyde[de carbone]) <estil> {bs_carbon_monoxide_states:state} [<dans> <area>]"
          - "Liste les capteur[s] [de] (CO2|monoxyde[de carbone]) [qui sont] {bs_carbon_monoxide_states:state} [<dans> <area>]"
          - "Où du (CO2|monoxyde[ de carbone]) <estil> {bs_carbon_monoxide_states:state}"
          - "Où du (CO2|monoxyde[ de carbone]) <atil> été {bs_carbon_monoxide_states:state}"
        response: which
        slots:
          domain: binary_sensor
          device_class: carbon_monoxide

      - sentences:
          - "combien de capteur[s] [de] (CO2|monoxyde[de carbone]) [qui] [<estil>] {bs_carbon_monoxide_states:state} [<dans> <area>]"
          - "compte (les |le nombre de) capteur[s] [de] (CO2|monoxyde[de carbone]) [qui] [<estil>] {bs_carbon_monoxide_states:state} [<dans> <area>]"
        response: how_many
        slots:
          domain: binary_sensor
          device_class: carbon_monoxide

      # # Cold
      - sentences:
          - "<name> [<dans> <area>] [<estil>] {bs_cold_states:state}"
          - "<name> [<estil>] {bs_cold_states:state} [<dans> <area>]"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: cold
        slots:
          domain: binary_sensor
          device_class: cold

      - sentences:
          - "[<yatil>] [(certain[e][s]|des)] (<capteur>|<appareil>) [qui sont] {bs_cold_states:state} [<dans> <area>]"
          - "[(certain[e][s]|des)] (<capteur>|<appareil>) [<estil>] {bs_cold_states:state} [<dans> <area>]"
        response: any
        slots:
          domain: binary_sensor
          device_class: cold
          state: "on"

      - sentences:
          - "<quel> [sont] [les] (<capteur>|<appareil>) [qui sont] {bs_cold_states:state} [<dans> <area>]"
          - "<quel> (<capteur>|<appareil>) [<estil>] {bs_cold_states:state} [<dans> <area>]"
          - "Liste les (<capteur>|<appareil>) [qui sont] {bs_cold_states:state} [<dans> <area>]"
        response: which
        slots:
          domain: binary_sensor
          device_class: cold
          state: "on"

      - sentences:
          - "combien (de |d')(<capteur>|<appareil>) [<estil>] {bs_cold_states:state} [<dans> <area>]"
          - "compte (les |le nombre d('|e ))(<capteur>|<appareil>) [qui sont] {bs_cold_states:state} [<dans> <area>]"
        response: how_many
        slots:
          domain: binary_sensor
          device_class: cold
          state: "on"

      # # Connectivity
      - sentences:
          - "<name> [<dans> <area>] [<estil>] {bs_connectivity_states:state}"
          - "<name> [<estil>] {bs_connectivity_states:state} [<dans> <area>]"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: connectivity
        slots:
          domain: binary_sensor
          device_class: connectivity

      - sentences:
          - "[(certain[e][s]|des)] (<capteur>|<appareil>) [<estil>] {bs_connectivity_states:state} [<dans> <area>]"
          - "[<yatil>] [(certain[e][s]|des)] (<capteur>|<appareil>) [qui sont] {bs_connectivity_states:state} [<dans> <area>]"
        response: any
        slots:
          domain: binary_sensor
          device_class: connectivity

      - sentences:
          - "<tous> les (<capteur>|<appareil>) [<estil>] {bs_connectivity_states:state} [in <area>]"
        response: all
        slots:
          domain: binary_sensor
          device_class: connectivity

      - sentences:
          - "<quel> (<capteur>|<appareil>) [<estil>] {bs_connectivity_states:state} [<dans> <area>]"
          - "<quel> [sont les] (<capteur>|<appareil>) [qui sont] {bs_connectivity_states:state} [<dans> <area>]"
          - "liste les (<capteur>|<appareil>) [qui sont] {bs_connectivity_states:state} [<dans> <area>]"
        response: which
        slots:
          domain: binary_sensor
          device_class: connectivity

      - sentences:
          - "combien (de |d')(<capteur>|<appareil>) [<estil>] {bs_connectivity_states:state} [<dans> <area>]"
          - "compte (les |le nombre d('|e ))(<capteur>|<appareil>) [qui sont] {bs_connectivity_states:state} [<dans> <area>]"
        response: how_many
        slots:
          domain: binary_sensor
          device_class: connectivity

      # # Door
      - sentences:
          - "<name> <estil> {bs_door_states:state} [<dans> <area>]"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: door
        slots:
          domain: binary_sensor
          device_class: door

      # # Garage door
      - sentences:
          - "<name> [<de>] [garage] [<dans> <area>] <estil> {bs_garage_door_states:state}"
          - "<name> [<de>] [garage] <estil> {bs_garage_door_states:state} [<dans> <area>]"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: garage_door
        slots:
          domain: binary_sensor
          device_class: garage_door

      - sentences:
          - "[<tous>] les portes [<de>] garage <estil> {bs_garage_door_states:state} [<dans> <area>]"
        response: all
        slots:
          domain: binary_sensor
          device_class: garage_door

      - sentences:
          - "[(certain[e][s]|des)] porte[s] <de> garage [<estil>] {bs_garage_door_states:state} [<dans> <area>]"
          - "[<yatil>] [(certain[e][s]|des)] porte[s] <de> garage [qui sont] {bs_garage_door_states:state} [<dans> <area>]"
        response: any
        slots:
          domain: binary_sensor
          device_class: garage_door

      - sentences:
          - "<quel> [sont] [les] porte[s] <de> garage [<estil>] {bs_garage_door_states:state} [<dans> <area>]"
          - "<quel> [sont] [les] porte[s] <de> garage [qui sont] {bs_garage_door_states:state} [<dans> <area>]"
          - "liste [les] porte[s] <de> garage [qui sont] {bs_garage_door_states:state} [<dans> <area>]"
        response: which
        slots:
          domain: binary_sensor
          device_class: garage_door

      - sentences:
          - "combien de porte[s] <de> garage [<estil>] {bs_garage_door_states:state} [<dans> <area>]"
          - "compte (les |le nombre de) porte[s] <de> garage [qui] [<estil>] {bs_garage_door_states:state} [<dans> <area>]"
        response: how_many
        slots:
          domain: binary_sensor
          device_class: garage_door

      # # Gas
      - sentences:
          - "<name> <estil> {bs_gas_states:state} [<dans> <area>]"
          - "<name> [<dans> <area>] <estil> {bs_gas_states:state}"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: gas
        slots:
          domain: binary_sensor
          device_class: gas

      - sentences:
          - "Du gaz <estil> {bs_gas_states:state} [<dans> <area>]"
          - "Du gaz <atil> [été] {bs_gas_states:state} [<dans> <area>]"
        response: any
        slots:
          domain: binary_sensor
          device_class: gas

      - sentences:
          - "[<yatil>] [(un|le) capteur de] gaz [(<estil>|de)] [{bs_gas_states:state}] [<dans> <area>]"
          - "une alerte [(de|au)] gaz <atil> été [{bs_gas_states:state}] [<dans> <area>]"
          - "[<yatil>] [une alerte] [(<de>|au)] gaz [de] [{bs_gas_states:state}] [<dans> <area>]"
          - "une alerte [(de|au)] gaz <estil> [{bs_gas_states:state}] [<dans> <area>]"
        response: any
        slots:
          domain: binary_sensor
          device_class: gas
          state: "on"

      - sentences:
          - "[<tous>] [les] capteurs [de] gaz <estil> {bs_gas_states:state} [<dans> <area>]"
        response: all
        slots:
          domain: binary_sensor
          device_class: gas

      - sentences:
          - "<quel> [sont les] capteur[s] [de] gaz [au statut] {bs_gas_states:state} [<dans> <area>]"
          - "<quel> [sont les] capteur[s] [de] gaz [qui] [sont] {bs_gas_states:state} [<dans> <area>]"
          - "<quel> capteur[s] [de] gaz <estil> {bs_gas_states:state} [<dans> <area>]"
          - "liste les capteur[s] [de] gaz [qui sont] {bs_gas_states:state} [<dans> <area>]"
          - "Où du gaz <estil> {bs_gas_states:state} "
        response: which
        slots:
          domain: binary_sensor
          device_class: gas

      - sentences:
          - "combien de capteur[s] [de] gaz [<estil>] {bs_gas_states:state} [<dans> <area>]"
          - "compte (les |le nombre de) capteur[s] [de] gaz [qui sont] {bs_gas_states:state} [<dans> <area>]"
        response: how_many
        slots:
          domain: binary_sensor
          device_class: gas

      # # Heat
      - sentences:
          - "<name> [<dans> <area>] (<estil>|<atil> une température) {bs_heat_states:state}"
          - "<name> (<estil>|<atil> une température) {bs_heat_states:state} [<dans> <area>]"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: heat
        slots:
          domain: binary_sensor
          device_class: heat

      - sentences:
          - "[<yatil>] [(certain[e][s]|des)] (<capteur>|<appareil>) [qui] {bs_heat_states:state} [<dans> <area>]"
          - "[(certain[e][s]|des)] (<capteur>|<appareil>) [<estil>] {bs_heat_states:state} [<dans> <area>]"
          - "[(certain[e][s]|des)] (<capteur>|<appareil>) {bs_heat_states:state}[(-il[s]|-elle[s])] [<dans> <area>]"
        response: any
        slots:
          domain: binary_sensor
          device_class: heat
          state: "on"

      - sentences:
          - "[<tous>] [les] (<capteur>|<appareil>) <atil> une température {bs_heat_states:state} [<dans> <area>]"
        response: all
        slots:
          domain: binary_sensor
          device_class: heat

      - sentences:
          - "<quel> (<capteur>|<appareil>) [<estil>] {bs_heat_states:state} [<dans> <area>]"
          - "<quel> sont les (<capteur>|<appareil>) [qui] [sont] {bs_heat_states:state} [<dans> <area>]"
          - "liste les (<capteur>|<appareil>) [qui] [sont] {bs_heat_states:state} [<dans> <area>]"
        response: which
        slots:
          domain: binary_sensor
          device_class: heat
          state: "on"

      - sentences:
          - "combien (de |d')(<capteur>|<appareil>) [<estil>] {bs_heat_states:state} [<dans> <area>]"
          - "compte (les |le nombre d('|e ))(<capteur>|<appareil>) [de] [qui sont] {bs_heat_states:state} [<dans> <area>]"
        response: how_many
        slots:
          domain: binary_sensor
          device_class: heat
          state: "on"

      # # Light
      - sentences:
          - "<name> <estil> {bs_light_states:state} [<dans> <area>]"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: light
        slots:
          domain: binary_sensor
          device_class: light

      - sentences:
          - "[<yatil>] (une |des) lumière[s] {bs_light_states:state} [<dans> <area>]"
          - "(une|des|de la) lumière[s] [<estil>] {bs_light_states:state} [<dans> <area>]"
        response: any
        slots:
          domain: binary_sensor
          device_class: light

      - sentences:
          - "<tous> les lumières <estil> {bs_light_states:state} [<dans> <area>]"
        response: all
        slots:
          domain: binary_sensor
          device_class: light

      - sentences:
          - "<quel> [sont] [les] lumières [qui] [sont] {bs_light_states:state} [<dans> <area>]"
          - "<quel> lumières [<estil>] {bs_light_states:state} [<dans> <area>]"
          - "liste les lumières [qui sont] {bs_light_states:state} [<dans> <area>]"
        response: which
        slots:
          domain: binary_sensor
          device_class: light

      - sentences:
          - "combien de lumières [<estil>] {bs_light_states:state} [<dans> <area>]"
          - "compte (les |le nombre de) lumières [qui] [sont] {bs_light_states:state} [<dans> <area>]"
        response: how_many
        slots:
          domain: binary_sensor
          device_class: light

      # # Lock
      - sentences:
          - "<name> [<dans> <area>] <estil> {bs_lock_states:state}"
          - "<name> <estil> {bs_lock_states:state} [<dans> <area>]"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: lock
        slots:
          domain: binary_sensor
          device_class: lock

      # # Moisture
      - sentences:
          - "<name> [<dans> <area>] <estil> {bs_moisture_states:state}"
          - "<name> <estil> {bs_moisture_states:state} [<dans> <area>]"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: moisture
        slots:
          domain: binary_sensor
          device_class: moisture

      - sentences:
          - "(des|un[e]) (<capteur>|<appareil>) [de détection] [(d'|de )][(eau|innondation|fuite[s]|humidité)] [<estil>] {bs_moisture_states:state} [<dans> <area>]"
          - "[<yatil>] (des|un[e]) (<capteur>|<appareil>) [de détection] [(d'|de )][(eau|innondation|fuite[s]|humidité)] [qui sont|de] {bs_moisture_states:state} [<dans> <area>]"
        response: any
        slots:
          domain: binary_sensor
          device_class: moisture

      - sentences:
          - "[<yatil>] (des|un[e]) {bs_moisture_states:state} [<dans> <area>]"
        response: any
        slots:
          domain: binary_sensor
          device_class: moisture

      - sentences:
          - "<tous> les (<capteur>|<appareil>) [de détection] [(d'|de )][(eau|innondation|fuite[s]|humidité)] <estil> {bs_moisture_states:state} [<dans> <area>]"
        response: all
        slots:
          domain: binary_sensor
          device_class: moisture

      - sentences:
          - "<quel> (<capteur>|<appareil>) [de détection] [(d'|de )][(eau|innondation|fuite[s]|humidité)] [<estil>] {bs_moisture_states:state} [<dans> <area>]"
          - "<quel> [sont] [les] (<capteur>|<appareil>) [de détection] [(d'|de )][(eau|innondation|fuite[s]|humidité)] [qui sont] {bs_moisture_states:state} [<dans> <area>]"
          - "liste les (<capteur>|<appareil>) [de détection] [(d'|de )][(eau|innondation|fuite[s]|humidité)] [qui sont] {bs_moisture_states:state} [<dans> <area>]"
        response: which
        slots:
          domain: binary_sensor
          device_class: moisture

      - sentences:
          - "combien de (<capteur>|<appareil>) [de détection] [(d'|de )][(eau|innondation|fuite[s]|humidité)] [<estil>] {bs_moisture_states:state} [<dans> <area>]"
          - "compte (les |le nombre d('|e ))(<capteur>|<appareil>) [de détection] [(d'|de )][(eau|innondation|fuite[s]|humidité)] [qui] [sont] {bs_moisture_states:state} [<dans> <area>]"
        response: how_many
        slots:
          domain: binary_sensor
          device_class: moisture

      # # Motion
      - sentences:
          - "<name> <estil> {bs_motion_states:state} [<dans> <area>]"
          - "<name> [<dans> <area>] <estil> {bs_motion_states:state}"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: motion
        slots:
          domain: binary_sensor
          device_class: motion

      - sentences:
          - "[<yatil>] (des|un|du) [(capteur|détecteur)[s] de mouvement] {bs_motion_states:state} [<dans> <area>]"
        response: any
        slots:
          domain: binary_sensor
          device_class: motion

      - sentences:
          - "(des|un|du) {bs_motion_states:state} [<estil>] [détecté[s]] [<dans> <area>]"
          - "[<yatil>] (des|un|du) {bs_motion_states:state} [détecté[s]] [<dans> <area>]"
        response: any
        slots:
          domain: binary_sensor
          device_class: motion

      - sentences:
          - "<tous> les (capteur|détecteur)[s] de mouvement <estil> {bs_motion_states:state} [<dans> <area>]"
        response: all
        slots:
          domain: binary_sensor
          device_class: motion

      - sentences:
          - "<quel> (capteur|détecteur)[s] de mouvement [<estil>] {bs_motion_states:state} [<dans> <area>]"
          - "<quel> [sont] [les] (capteur|détecteur)[s] de mouvement [qui sont] {bs_motion_states:state} [<dans> <area>]"
          - "liste [sont] [les] (capteur|détecteur)[s] de mouvement [qui] [<estil>] {bs_motion_states:state} [<dans> <area>]"
          - "Où du mouvement [<estil>] {bs_motion_states:state} [<dans> <area>]"
        response: which
        slots:
          domain: binary_sensor
          device_class: motion

      - sentences:
          - "combien de (capteur|détecteur)[s] de mouvement [<estil>] {bs_motion_states:state} [<dans> <area>]"
          - "compte (les |le nombre de) (capteur|détecteur)[s] de mouvement [qui] [sont] {bs_motion_states:state} [<dans> <area>]"
        response: how_many
        slots:
          domain: binary_sensor
          device_class: motion

      # # Occupancy
      - sentences:
          - "[le] [(capteur|détecteur)][s] [de] <name> <estil> {bs_occupancy_states:state} [<dans> <area>]"
          - "[le] [(capteur|détecteur)][s] [de] <name> [<dans> <area>] <estil> {bs_occupancy_states:state}"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: occupancy
        slots:
          domain: binary_sensor
          device_class: occupancy

      - sentences:
          - "[<yatil>] (des|un|du) [(capteur|détecteur)[s] de présence] {bs_occupancy_states:state} [<dans> <area>]"
          - "<area> <estil> {bs_occupancy_states:state}"
        response: any
        slots:
          domain: binary_sensor
          device_class: occupancy

      - sentences:
          - "[<yatil>] (quelqu'un|(une|des) personne[s]) [de] [détecté[e]s] [<dans> <area>]"
          - "(quelqu'un|(une|des) personne[s]) [<estil>] [détecté[e]s] [<dans> <area>]"
        response: any
        slots:
          domain: binary_sensor
          device_class: occupancy
          state: "on"

      - sentences:
          - "<tous> les (capteur|détecteur)[s] de présence <estil> {bs_occupancy_states:state} [<dans> <area>]"
        response: all
        slots:
          domain: binary_sensor
          device_class: occupancy

      - sentences:
          - "<quel> (capteur|détecteur)[s] de présence [<estil>] {bs_occupancy_states:state} [<dans> <area>]"
          - "<quel> sont les (capteur|détecteur)[s] de présence [qui] [sont] {bs_occupancy_states:state} [<dans> <area>]"
          - "liste les (capteur|détecteur)[s] de présence [qui] [<estil>] {bs_occupancy_states:state} [<dans> <area>]"
        response: which
        slots:
          domain: binary_sensor
          device_class: occupancy

      - sentences:
          - "combien de (capteur|détecteur)[s] de présence [<estil>] {bs_occupancy_states:state} [<dans> <area>]"
          - "compte (les |le nombre de) (capteur|détecteur)[s] de présence [qui] [sont] {bs_occupancy_states:state} [<dans> <area>]"
        response: how_many
        slots:
          domain: binary_sensor
          device_class: occupancy

      # # Opening
      - sentences:
          - "<name> <estil> {bs_opening_states:state} [<dans> <area>]"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: opening
        slots:
          domain: binary_sensor
          device_class: opening

      - sentences:
          - "[<yatil>] (des|un[e]) ouverture[s] [qui est] {bs_opening_states:state} [<dans> <area>]"
          - "(des|un[e]) ouverture[s] [<estil>] {bs_opening_states:state} [<dans> <area>]"
        response: any
        slots:
          domain: binary_sensor
          device_class: opening

      - sentences:
          - "<tous> les ouverture[s] [<dans> <area>] <estil> {bs_opening_states:state}"
          - "<tous> les ouverture[s] <estil> {bs_opening_states:state} [<dans> <area>]"
        response: all
        slots:
          domain: binary_sensor
          device_class: opening

      - sentences:
          - "<quel> sont [les] ouverture[s] [qui sont] {bs_opening_states:state} [<dans> <area>]"
          - "<quel> ouverture[s] [<estil>] {bs_opening_states:state} [<dans> <area>]"
          - "liste les ouverture[s] [qui] [<estil>] {bs_opening_states:state} [<dans> <area>]"
        response: which
        slots:
          domain: binary_sensor
          device_class: opening

      - sentences:
          - "combien d'ouverture[s] [<estil>] {bs_opening_states:state} [<dans> <area>]"
          - "compte (les |le nombre d')ouverture[s] [qui] [sont] {bs_opening_states:state} [<dans> <area>]"
        response: how_many
        slots:
          domain: binary_sensor
          device_class: opening

      # # Plug
      - sentences:
          - "<name> <estil> {bs_plug_states:state} [<dans> <area>]"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: plug
        slots:
          domain: binary_sensor
          device_class: plug

      - sentences:
          - "[<yatil>] (des|un[e]) (<capteur>|<appareil>) [qui est] {bs_plug_states:state} [<dans> <area>]"
          - "(des|un[e]) (<capteur>|<appareil>) [<estil>] {bs_plug_states:state} [<dans> <area>]"
        response: any
        slots:
          domain: binary_sensor
          device_class: plug

      - sentences:
          - "<tous> les (<capteur>|<appareil>) [<dans> <area>] <estil> {bs_plug_states:state}"
          - "<tous> les (<capteur>|<appareil>) <estil> {bs_plug_states:state} [<dans> <area>]"
        response: all
        slots:
          domain: binary_sensor
          device_class: plug

      - sentences:
          - "<quel> sont [les] (<capteur>|<appareil>) [qui sont] {bs_plug_states:state} [<dans> <area>]"
          - "<quel> (<capteur>|<appareil>) [<estil>] {bs_plug_states:state} [<dans> <area>]"
          - "liste les (<capteur>|<appareil>) [qui] [<estil>] {bs_plug_states:state} [<dans> <area>]"
        response: which
        slots:
          domain: binary_sensor
          device_class: plug

      - sentences:
          - "combien (d'|de )(<capteur>|<appareil>) [<estil>] {bs_plug_states:state} [<dans> <area>]"
          - "compte (les |le nombre d')(<capteur>|<appareil>) [qui] [sont] {bs_plug_states:state} [<dans> <area>]"
        response: how_many
        slots:
          domain: binary_sensor
          device_class: plug

      # # Power
      - sentences:
          - "<name> <estil> {bs_power_states:state} [<dans> <area>]"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: power
        slots:
          domain: binary_sensor
          device_class: power

      - sentences:
          - "[<yatil>] (des|un[e]) (<capteur>|<appareil>) [qui est] {bs_power_states:state}[<dans> <area>]"
          - "(des|un[e]) (<capteur>|<appareil>) [<estil>] {bs_power_states:state} [<dans> <area>]"
        response: any
        slots:
          domain: binary_sensor
          device_class: power

      - sentences:
          - "<tous> les (<capteur>|<appareil>) [<dans> <area>] <estil> {bs_power_states:state}"
          - "<tous> les (<capteur>|<appareil>) <estil> {bs_power_states:state} [<dans> <area>]"
        response: all
        slots:
          domain: binary_sensor
          device_class: power

      - sentences:
          - "<quel> sont [les] (<capteur>|<appareil>) [qui sont] {bs_power_states:state} [<dans> <area>]"
          - "<quel> (<capteur>|<appareil>) [<estil>] {bs_power_states:state} [<dans> <area>]"
          - "liste les (<capteur>|<appareil>) [qui] [<estil>] {bs_power_states:state} [<dans> <area>]"
        response: which
        slots:
          domain: binary_sensor
          device_class: power

      - sentences:
          - "combien (d'|de )(<capteur>|<appareil>) [<estil>] {bs_power_states:state} [<dans> <area>]"
          - "compte (les |le nombre d')(<capteur>|<appareil>) [qui] [sont] {bs_power_states:state} [<dans> <area>]"
        response: how_many
        slots:
          domain: binary_sensor
          device_class: power

      # # Presence
      - sentences:
          - "<name> <estil> {bs_presence_states:state} [<dans> <area>]"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: presence
        slots:
          domain: binary_sensor
          device_class: presence

      - sentences:
          - "[<yatil>] (des|un[e]) (<capteur>|<appareil>) [qui est] {bs_presence_states:state} [<dans> <area>]"
          - "(des|un[e]) (<capteur>|<appareil>) [<estil>] {bs_presence_states:state} [<dans> <area>]"
        response: any
        slots:
          domain: binary_sensor
          device_class: presence

      - sentences:
          - "<tous> les (<capteur>|<appareil>) [<dans> <area>] <estil> {bs_presence_states:state}"
          - "<tous> les (<capteur>|<appareil>) <estil> {bs_presence_states:state} [<dans> <area>]"
        response: all
        slots:
          domain: binary_sensor
          device_class: presence

      - sentences:
          - "<quel> sont [les] (<capteur>|<appareil>) [qui sont] {bs_presence_states:state} [<dans> <area>]"
          - "<quel> (<capteur>|<appareil>) [<estil>] {bs_presence_states:state} [<dans> <area>]"
          - "liste les (<capteur>|<appareil>) [qui] [<estil>] {bs_presence_states:state} [<dans> <area>]"
        response: which
        slots:
          domain: binary_sensor
          device_class: presence

      - sentences:
          - "combien (d'|de )(<capteur>|<appareil>) [<estil>] {bs_presence_states:state} [<dans> <area>]"
          - "compte (les |le nombre d')(<capteur>|<appareil>) [qui] [sont] {bs_presence_states:state} [<dans> <area>]"
        response: how_many
        slots:
          domain: binary_sensor
          device_class: presence

      # # Problem
      - sentences:
          - "<name> <atil> un problème [<dans> <area>]"
          - "<yatil> un problème avec <name> [<dans> <area>]"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: problem
        slots:
          domain: binary_sensor
          device_class: problem
          state: "on"

      - sentences:
          - "<quel> sont [les] (<capteur>|<appareil>) [qui ont] un problème [<dans> <area>]"
          - "<quel> (<capteur>|<appareil>) [<atil>] un problème [<dans> <area>]"
          - "liste les (<capteur>|<appareil>) [qui ont] un problème [<dans> <area>]"
        response: which
        slots:
          domain: binary_sensor
          device_class: problem
          state: "on"

      # # Running
      - sentences:
          - "<name> <estil> {bs_running_states:state} [<dans> <area>]"
          - "<name> {bs_running_states:state}-t-(il|elle) [<dans> <area>]"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: running
        slots:
          domain: binary_sensor
          device_class: running

      - sentences:
          - "[<yatil>] (des|un[e]) (<capteur>|<appareil>) [qui est] {bs_running_states:state} [<dans> <area>]"
          - "(des|un[e]) (<capteur>|<appareil>) [<estil>] {bs_running_states:state} [<dans> <area>]"
          - "(des|un[e]) (<capteur>|<appareil>) {bs_running_states:state}-(il[s]|elle[s]) [<dans> <area>]"
        response: any
        slots:
          domain: binary_sensor
          device_class: running

      - sentences:
          - "<tous> les (<capteur>|<appareil>) [<dans> <area>] <estil> {bs_running_states:state}"
          - "<tous> les (<capteur>|<appareil>) <estil> {bs_running_states:state} [<dans> <area>]"
        response: all
        slots:
          domain: binary_sensor
          device_class: running

      - sentences:
          - "<quel> sont [les] (<capteur>|<appareil>) [qui sont] {bs_running_states:state} [<dans> <area>]"
          - "<quel> (<capteur>|<appareil>) [<estil>] {bs_running_states:state} [<dans> <area>]"
          - "<quel> (<capteur>|<appareil>) {bs_running_states:state}-(il[s]|elle[s]) [<dans> <area>]"
          - "liste les (<capteur>|<appareil>) [qui] [<estil>] {bs_running_states:state} [<dans> <area>]"
        response: which
        slots:
          domain: binary_sensor
          device_class: running

      - sentences:
          - "combien (d'|de )(<capteur>|<appareil>) [<estil>] {bs_running_states:state} [<dans> <area>]"
          - "compte (les |le nombre d')(<capteur>|<appareil>) [qui] [sont] {bs_running_states:state} [<dans> <area>]"
        response: how_many
        slots:
          domain: binary_sensor
          device_class: running

      # # Safety
      - sentences:
          - "<name> <estil> {bs_safety_states:state} [<dans> <area>]"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: safety
        slots:
          domain: binary_sensor
          device_class: safety

      # # Smoke
      - sentences:
          - "<name> <estil> {bs_smoke_states:state} [<dans> <area>]"
          - "<name> [<dans> <area>] <estil> {bs_smoke_states:state}"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: smoke
        slots:
          domain: binary_sensor
          device_class: smoke

      - sentences:
          - "De la fumée <estil> {bs_smoke_states:state} [<dans> <area>]"
          - "De la fumée <atil> [été] {bs_smoke_states:state} [<dans> <area>]"
        response: any
        slots:
          domain: binary_sensor
          device_class: smoke

      - sentences:
          - "[<yatil>] [(un|le) capteur de] fumée [(<estil>|de)] [{bs_smoke_states:state}] [<dans> <area>]"
          - "une alerte incendie <atil> été [{bs_smoke_states:state}] [<dans> <area>]"
          - "[<yatil>] <de> la fumée [de] [{bs_smoke_states:state}] [<dans> <area>]"
          - "[<yatil>] une alerte incendie [{bs_smoke_states:state}] [<dans> <area>]"
          - "une alerte incendie <estil> [{bs_smoke_states:state}] [<dans> <area>]"
        response: any
        slots:
          domain: binary_sensor
          device_class: smoke
          state: "on"

      - sentences:
          - "[<tous>] [les] capteurs [de] fumée <estil> {bs_smoke_states:state} [<dans> <area>]"
        response: all
        slots:
          domain: binary_sensor
          device_class: smoke

      - sentences:
          - "<quel> [sont les] capteur[s] [de] fumée [au statut] {bs_smoke_states:state} [<dans> <area>]"
          - "<quel> [sont les] capteur[s] [de] fumée [qui] [sont] {bs_smoke_states:state} [<dans> <area>]"
          - "<quel> capteur[s] [de] fumée <estil> {bs_smoke_states:state} [<dans> <area>]"
          - "liste les capteur[s] [de] fumée [qui sont] {bs_smoke_states:state} [<dans> <area>]"
          - "Où de la fumée <estil> {bs_smoke_states:state} "
        response: which
        slots:
          domain: binary_sensor
          device_class: smoke

      - sentences:
          - "combien de capteur[s] [de] fumée [<estil>] {bs_smoke_states:state} [<dans> <area>]"
          - "compte (les |le nombre de) capteur[s] [de] fumée [qui sont] {bs_smoke_states:state} [<dans> <area>]"
        response: how_many
        slots:
          domain: binary_sensor
          device_class: smoke

      # # Sound
      - sentences:
          - "<name> <estil> {bs_sound_states:state} [<dans> <area>]"
          - "<name> [<dans> <area>] <estil> {bs_sound_states:state}"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: sound
        slots:
          domain: binary_sensor
          device_class: sound

      - sentences:
          - "(Du bruit|Un son) <estil> {bs_sound_states:state} [<dans> <area>]"
          - "(Du bruit|Un son) <atil> [été] {bs_sound_states:state} [<dans> <area>]"
        response: any
        slots:
          domain: binary_sensor
          device_class: sound

      - sentences:
          - "[<yatil>] [(un|le) capteur de] (son|bruit) [(<estil>|de)] [{bs_sound_states:state}] [<dans> <area>]"
          - "une sirène <atil> été [{bs_sound_states:state}] [<dans> <area>]"
          - "[<yatil>] du (son|bruit) [de] [{bs_sound_states:state}] [<dans> <area>]"
          - "[<yatil>] une sirène [{bs_sound_states:state}] [<dans> <area>]"
          - "une sirène <estil> [{bs_sound_states:state}] [<dans> <area>]"
        response: any
        slots:
          domain: binary_sensor
          device_class: sound
          state: "on"

      - sentences:
          - "[<tous>] [les] capteurs [de] (son|bruit) <estil> {bs_sound_states:state} [<dans> <area>]"
        response: all
        slots:
          domain: binary_sensor
          device_class: sound

      - sentences:
          - "<quel> [sont les] capteur[s] de (son|bruit) [au statut] {bs_sound_states:state} [<dans> <area>]"
          - "<quel> [sont les] capteur[s] de (son|bruit) [qui] [sont] {bs_sound_states:state} [<dans> <area>]"
          - "<quel> capteur[s] de (son|bruit) <estil> {bs_sound_states:state} [<dans> <area>]"
          - "liste les capteur[s] de (son|bruit)[qui sont] {bs_sound_states:state} [<dans> <area>]"
          - "Où du (son|bruit) <estil> {bs_sound_states:state}"
        response: which
        slots:
          domain: binary_sensor
          device_class: sound

      - sentences:
          - "combien de capteur[s] de (son|bruit) [<estil>] {bs_sound_states:state} [<dans> <area>]"
          - "compte (les |le nombre de) capteur[s] de (son|bruit) [qui sont] {bs_sound_states:state} [<dans> <area>]"
        response: how_many
        slots:
          domain: binary_sensor
          device_class: sound

      # # Tamper
      - sentences:
          - "<name> <estil> {bs_tamper_states:state} [<dans> <area>]"
          - "<name> [<dans> <area>] <estil> {bs_tamper_states:state}"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: tamper
        slots:
          domain: binary_sensor
          device_class: tamper

      # # Update
      - sentences:
          - "<name> <estil> {bs_update_states:state} [<dans> <area>]"
          - "<name> [<dans> <area>] <estil> {bs_update_states:state}"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: update
        slots:
          domain: binary_sensor
          device_class: update

      - sentences:
          - "[<yatil>] (une|des) mise[s] à jour [de (firmware|driver|pilote|logiciel)[s]] [de] {bs_update_states:state} [<dans> <area>]"
          - "(une|des) mise[s] à jour [de (firmware|driver|pilote|logiciel)[s]] <estil> {bs_update_states:state} [<dans> <area>]"
          - "[<yatil> une] {bs_update_states:state} [<dans> <area>]"

        response: any
        slots:
          domain: binary_sensor
          device_class: update
          state: "on"

      - sentences:
          - "<quel> [sont les] mise[s] à jour [de (firmware|logiciel)] {bs_update_states:state} [<dans> <area>]"
          - "<quel> mise[s] à jour [de (firmware[s]|logiciel[le][s])] <estil> {bs_update_states:state} [<dans> <area>]"
          - "liste les mises à jour [de (firmware[s]|logiciel[le][s])] [qui sont] {bs_update_states:state} [<dans> <area>]"
        response: which
        slots:
          domain: binary_sensor
          device_class: update
          state: "on"

      - sentences:
          - "combien de mises à jour [de (firmware[s]|logiciel[le][s])] [<estil>] {bs_update_states:state} [<dans> <area>]"
          - "compte (les |le nombre de) mises à jour [de (firmware[s]|logiciel[le][s])] [qui sont] {bs_update_states:state} [<dans> <area>]"
        response: how_many
        slots:
          domain: binary_sensor
          device_class: update
          state: "on"

      # # Vibration
      - sentences:
          - "<name> {bs_vibration_states:state}[-t-(il|elle)] [<dans> <area>]"
          - "<name> [<dans> <area>] <estil> [entrain de] {bs_vibration_states:state}"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: vibration
        slots:
          domain: binary_sensor
          device_class: vibration

      - sentences:
          - "(un[e]|du|de[s]|quelque chose) [(<capteur>|<appareil>)] vibre[nt][-t][-(il|elle)] [<dans> <area>]"
        response: any
        requires_context:
          domain: binary_sensor
          device_class: vibration
        slots:
          domain: binary_sensor
          device_class: vibration
          state: "on"

      # # Window
      - sentences:
          - "<name> <estil> {bs_window_states:state} [in <area>]"
        response: one_yesno
        requires_context:
          domain: binary_sensor
          device_class: window
        slots:
          domain: binary_sensor
          device_class: window

      - sentences:
          - "[<yatil>] (des|un[e]) <fenetre> [qui sont] {bs_window_states:state} [<dans> <area>]"
          - "(des|un[e]) <fenetre> [<estil>] {bs_window_states:state} [<dans> <area>]"
        response: any
        slots:
          domain: binary_sensor
          device_class: window

      - sentences:
          - "<tous> les <fenetre> <estil> {bs_window_states:state} [<dans> <area>]"
          - "<tous> les <fenetre> [<dans> <area>] <estil> {bs_window_states:state}"
        response: all
        slots:
          domain: binary_sensor
          device_class: window

      - sentences:
          - "<quel> [sont] [les] <fenetre> [qui sont] {bs_window_states:state} [<dans> <area>]"
          - "<quel> <fenetre> [<estil>] {bs_window_states:state} [<dans> <area>]"
          - "liste les <fenetre> [qui sont] {bs_window_states:state} [<dans> <area>]"
        response: which
        slots:
          domain: binary_sensor
          device_class: window

      - sentences:
          - "combien de <fenetre> [<estil>] {bs_window_states:state} [<dans> <area>]"
          - "compte les <fenetre> [qui] [sont] {bs_window_states:state} [<dans> <area>]"
        response: how_many
        slots:
          domain: binary_sensor
          device_class: window
